// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticalTest.DataStore.DAL;

namespace PracticalTest.DataStore.Migrations
{
    [DbContext(typeof(AppStore))]
    partial class AppStoreModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PracticalTest.DataStore.Models.Client", b =>
                {
                    b.Property<string>("ClientUniqueId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TelephoneNr")
                        .IsRequired()
                        .HasColumnType("nchar(24)")
                        .IsFixedLength(true)
                        .HasMaxLength(24);

                    b.HasKey("ClientUniqueId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PracticalTest.DataStore.Models.Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,5)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanID")
                        .HasColumnType("int");

                    b.Property<int>("OrderNr")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LoanID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PracticalTest.DataStore.Models.Loan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("ClientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("LoanPeriod")
                        .HasColumnType("int")
                        .HasMaxLength(24);

                    b.Property<DateTime>("PayoutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("PracticalTest.DataStore.Models.Invoice", b =>
                {
                    b.HasOne("PracticalTest.DataStore.Models.Loan", "Loan")
                        .WithMany("Invoices")
                        .HasForeignKey("LoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PracticalTest.DataStore.Models.Loan", b =>
                {
                    b.HasOne("PracticalTest.DataStore.Models.Client", "Client")
                        .WithMany("Loans")
                        .HasForeignKey("ClientID");
                });
#pragma warning restore 612, 618
        }
    }
}
